"""
processing_dialog.py
"""

import sys
import math
from PyQt5.QtWidgets import (
    QDialog, QVBoxLayout, QHBoxLayout, QLabel, QProgressBar, 
    QPushButton, QFrame, QApplication, QGraphicsDropShadowEffect
)
from PyQt5.QtCore import (
    Qt, QTimer, QPropertyAnimation, QEasingCurve, 
    QSequentialAnimationGroup, QParallelAnimationGroup,
    pyqtProperty, QRect, QPoint
)
from PyQt5.QtGui import (
    QPainter, QColor, QFont, QPen, QBrush, 
    QLinearGradient, QConicalGradient, QPalette
)


class AnimatedProgressBar(QProgressBar):
    """–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setRange(0, 100)
        self.setValue(0)
        
        # –ê–Ω–∏–º–∞—Ü–∏—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞
        self._gradient_offset = 0.0
        self.gradient_timer = QTimer()
        self.gradient_timer.timeout.connect(self.update_gradient)
        self.gradient_timer.start(50)  # 20 FPS
        
        self.setStyleSheet("""
            QProgressBar {
                border: 2px solid #404040;
                border-radius: 10px;
                text-align: center;
                background-color: #1a1a1a;
                color: white;
                font-weight: bold;
                font-size: 12px;
            }
        """)
        
    def update_gradient(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞"""
        self._gradient_offset += 0.02
        if self._gradient_offset > 1.0:
            self._gradient_offset = 0.0
        self.update()
        
    def paintEvent(self, event):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º"""
        painter = QPainter(self)
        painter.setRenderHint(QPainter.Antialiasing)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
        rect = self.rect()
        
        # –§–æ–Ω
        painter.fillRect(rect, QColor(26, 26, 26))
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å
        if self.value() > 0:
            progress_width = int((rect.width() - 4) * self.value() / self.maximum())
            progress_rect = QRect(2, 2, progress_width, rect.height() - 4)
            
            # –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
            gradient = QLinearGradient(0, 0, progress_rect.width(), 0)
            
            # –¶–≤–µ—Ç–∞ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞
            color1 = QColor(74, 144, 226)    # –°–∏–Ω–∏–π
            color2 = QColor(46, 204, 113)    # –ó–µ–ª–µ–Ω—ã–π
            color3 = QColor(241, 196, 15)    # –ñ–µ–ª—Ç—ã–π
            
            # –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏
            pos1 = (self._gradient_offset) % 1.0
            pos2 = (self._gradient_offset + 0.3) % 1.0
            pos3 = (self._gradient_offset + 0.6) % 1.0
            
            gradient.setColorAt(pos1, color1)
            gradient.setColorAt(pos2, color2)
            gradient.setColorAt(pos3, color3)
            
            painter.setBrush(QBrush(gradient))
            painter.setPen(Qt.NoPen)
            painter.drawRoundedRect(progress_rect, 8, 8)
            
            # –ë–ª–∏–∫–∏
            highlight_gradient = QLinearGradient(0, 0, 0, progress_rect.height())
            highlight_gradient.setColorAt(0.0, QColor(255, 255, 255, 60))
            highlight_gradient.setColorAt(0.5, QColor(255, 255, 255, 20))
            highlight_gradient.setColorAt(1.0, QColor(255, 255, 255, 0))
            
            painter.setBrush(QBrush(highlight_gradient))
            painter.drawRoundedRect(progress_rect, 8, 8)
            
        # –†–∞–º–∫–∞
        painter.setPen(QPen(QColor(64, 64, 64), 2))
        painter.setBrush(Qt.NoBrush)
        painter.drawRoundedRect(rect.adjusted(1, 1, -1, -1), 10, 10)
        
        # –¢–µ–∫—Å—Ç
        painter.setPen(QPen(QColor(255, 255, 255)))
        painter.setFont(QFont("Arial", 11, QFont.Bold))
        painter.drawText(rect, Qt.AlignCenter, f"{self.value()}%")


class PulsingIcon(QLabel):
    """–ü—É–ª—å—Å–∏—Ä—É—é—â–∞—è –∏–∫–æ–Ω–∫–∞ –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
    
    def __init__(self, text="üî¨", parent=None):
        super().__init__(text, parent)
        self.setAlignment(Qt.AlignCenter)
        self.setStyleSheet("font-size: 48px;")
        
        # –ê–Ω–∏–º–∞—Ü–∏—è –ø—É–ª—å—Å–∞—Ü–∏–∏
        self.pulse_animation = QPropertyAnimation(self, b"geometry")
        self.pulse_animation.setDuration(1000)
        self.pulse_animation.setEasingCurve(QEasingCurve.InOutQuad)
        
        # –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è (–∏–º–∏—Ç–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞)
        self.rotation_timer = QTimer()
        self.rotation_timer.timeout.connect(self.update_rotation)
        self.rotation_timer.start(100)
        
        self._rotation_angle = 0
        self._base_size = 48
        
    def update_rotation(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –≤—Ä–∞—â–µ–Ω–∏—è"""
        self._rotation_angle += 10
        if self._rotation_angle >= 360:
            self._rotation_angle = 0
            
        # –°–æ–∑–¥–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø—É–ª—å—Å–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
        scale = 1.0 + 0.1 * math.sin(math.radians(self._rotation_angle * 2))
        size = int(self._base_size * scale)
        
        self.setStyleSheet(f"font-size: {size}px; color: #4a90e2;")
        
    def start_pulse(self):
        """–ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—É–ª—å—Å–∞—Ü–∏–∏"""
        if not self.pulse_animation.state() == QPropertyAnimation.Running:
            start_geometry = self.geometry()
            end_geometry = QRect(
                start_geometry.x() - 5, start_geometry.y() - 5,
                start_geometry.width() + 10, start_geometry.height() + 10
            )
            
            self.pulse_animation.setStartValue(start_geometry)
            self.pulse_animation.setEndValue(end_geometry)
            self.pulse_animation.finished.connect(self.reverse_pulse)
            self.pulse_animation.start()
            
    def reverse_pulse(self):
        """–û–±—Ä–∞—Ç–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –ø—É–ª—å—Å–∞—Ü–∏–∏"""
        self.pulse_animation.finished.disconnect()
        start_value = self.pulse_animation.endValue()
        end_value = self.pulse_animation.startValue()
        
        self.pulse_animation.setStartValue(start_value)
        self.pulse_animation.setEndValue(end_value)
        self.pulse_animation.finished.connect(self.start_pulse)
        self.pulse_animation.start()


class FloatingParticle(QLabel):
    """–ü–ª–∞–≤–∞—é—â–∞—è —á–∞—Å—Ç–∏—Ü–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Ñ–æ–Ω–∞"""
    
    def __init__(self, parent=None):
        super().__init__("‚ú¶", parent)
        self.setStyleSheet("color: rgba(74, 144, 226, 100); font-size: 16px;")
        self.resize(20, 20)
        
        # –°–ª—É—á–∞–π–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
        import random
        self.start_x = random.randint(0, 400)
        self.start_y = random.randint(400, 500)
        self.move(self.start_x, self.start_y)
        
        # –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
        self.move_animation = QPropertyAnimation(self, b"pos")
        self.move_animation.setDuration(random.randint(3000, 6000))
        self.move_animation.setEasingCurve(QEasingCurve.InOutSine)
        
        # –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
        self.fade_animation = QPropertyAnimation(self, b"windowOpacity")
        self.fade_animation.setDuration(2000)
        self.fade_animation.setEasingCurve(QEasingCurve.InOutQuad)
        
    def start_floating(self):
        """–ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–ª–∞–≤–∞–Ω–∏—è"""
        import random
        
        # –î–≤–∏–∂–µ–Ω–∏–µ –∫ —Å–ª—É—á–∞–π–Ω–æ–π —Ç–æ—á–∫–µ –≤–≤–µ—Ä—Ö—É
        end_x = random.randint(0, 400)
        end_y = random.randint(-50, 0)
        
        self.move_animation.setStartValue(QPoint(self.start_x, self.start_y))
        self.move_animation.setEndValue(QPoint(end_x, end_y))
        self.move_animation.finished.connect(self.hide)
        self.move_animation.start()
        
        # –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ
        self.fade_animation.setStartValue(1.0)
        self.fade_animation.setEndValue(0.0)
        self.fade_animation.start()


class ProcessingDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏"""
    
    def __init__(self, parent=None, title="–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö"):
        super().__init__(parent)
        self.setWindowTitle(title)
        self.setModal(True)
        self.setFixedSize(500, 350)
        
        # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –æ–∫–Ω–∞
        self.setWindowFlags(Qt.Dialog | Qt.CustomizeWindowHint | Qt.WindowTitleHint)
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.is_processing = True
        self.particles = []
        
        self.setup_ui()
        self.setup_animations()
        self.setup_styling()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏
        self.start_animations()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        layout = QVBoxLayout(self)
        layout.setSpacing(20)
        layout.setContentsMargins(30, 30, 30, 30)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.title_label = QLabel("–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
        self.title_label.setAlignment(Qt.AlignCenter)
        self.title_label.setStyleSheet("""
            QLabel {
                font-size: 18px;
                font-weight: bold;
                color: #4a90e2;
                margin-bottom: 10px;
            }
        """)
        layout.addWidget(self.title_label)
        
        # –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–∫–æ–Ω–∫–∞
        icon_layout = QHBoxLayout()
        icon_layout.addStretch()
        
        self.processing_icon = PulsingIcon("üî¨")
        icon_layout.addWidget(self.processing_icon)
        
        icon_layout.addStretch()
        layout.addLayout(icon_layout)
        
        # –°—Ç–∞—Ç—É—Å
        self.status_label = QLabel("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...")
        self.status_label.setAlignment(Qt.AlignCenter)
        self.status_label.setStyleSheet("""
            QLabel {
                font-size: 14px;
                color: white;
                margin: 10px 0;
            }
        """)
        layout.addWidget(self.status_label)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.progress_bar = AnimatedProgressBar()
        self.progress_bar.setFixedHeight(25)
        layout.addWidget(self.progress_bar)
        
        # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        self.details_label = QLabel("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∞–Ω–∞–ª–∏–∑—É...")
        self.details_label.setAlignment(Qt.AlignCenter)
        self.details_label.setStyleSheet("""
            QLabel {
                font-size: 11px;
                color: #888888;
                margin-top: 5px;
            }
        """)
        layout.addWidget(self.details_label)
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã (—Å–∫—Ä—ã—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        button_layout = QHBoxLayout()
        button_layout.addStretch()
        
        self.cancel_button = QPushButton("–û—Ç–º–µ–Ω–∏—Ç—å")
        self.cancel_button.setVisible(False)
        self.cancel_button.clicked.connect(self.cancel_processing)
        self.cancel_button.setStyleSheet("""
            QPushButton {
                background-color: #e74c3c;
                border: none;
                border-radius: 6px;
                color: white;
                font-weight: bold;
                padding: 8px 16px;
                min-width: 80px;
            }
            QPushButton:hover {
                background-color: #c0392b;
            }
            QPushButton:pressed {
                background-color: #a93226;
            }
        """)
        button_layout.addWidget(self.cancel_button)
        
        button_layout.addStretch()
        layout.addLayout(button_layout)
        
    def setup_animations(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π"""
        # –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
        self.fade_in_animation = QPropertyAnimation(self, b"windowOpacity")
        self.fade_in_animation.setDuration(500)
        self.fade_in_animation.setStartValue(0.0)
        self.fade_in_animation.setEndValue(1.0)
        self.fade_in_animation.setEasingCurve(QEasingCurve.OutCubic)
        
        # –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        self.title_animation = QPropertyAnimation(self.title_label, b"geometry")
        self.title_animation.setDuration(800)
        self.title_animation.setEasingCurve(QEasingCurve.OutBounce)
        
        # –¢–∞–π–º–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Å—Ç–∏—Ü
        self.particle_timer = QTimer()
        self.particle_timer.timeout.connect(self.create_particle)
        self.particle_timer.start(500)  # –ù–æ–≤–∞—è —á–∞—Å—Ç–∏—Ü–∞ –∫–∞–∂–¥—ã–µ 500–º—Å
        
    def setup_styling(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            QDialog {
                background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                          stop: 0 #2a2a2a, stop: 1 #1a1a1a);
                border: 2px solid #404040;
                border-radius: 15px;
            }
        """)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–Ω—å
        shadow = QGraphicsDropShadowEffect()
        shadow.setBlurRadius(20)
        shadow.setColor(QColor(0, 0, 0, 100))
        shadow.setOffset(0, 10)
        self.setGraphicsEffect(shadow)
        
    def start_animations(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∞–Ω–∏–º–∞—Ü–∏–π"""
        # –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        self.fade_in_animation.start()
        
        # –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        original_geometry = self.title_label.geometry()
        start_geometry = QRect(
            original_geometry.x(), 
            original_geometry.y() - 50,
            original_geometry.width(), 
            original_geometry.height()
        )
        
        self.title_animation.setStartValue(start_geometry)
        self.title_animation.setEndValue(original_geometry)
        self.title_animation.start()
        
        # –ó–∞–ø—É—Å–∫ –ø—É–ª—å—Å–∞—Ü–∏–∏ –∏–∫–æ–Ω–∫–∏
        QTimer.singleShot(300, self.processing_icon.start_pulse)
        
    def create_particle(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —á–∞—Å—Ç–∏—Ü—ã"""
        if len(self.particles) < 8:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–∏—Ü
            particle = FloatingParticle(self)
            particle.show()
            particle.start_floating()
            self.particles.append(particle)
            
            # –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—É —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
            QTimer.singleShot(6000, lambda: self.remove_particle(particle))
            
    def remove_particle(self, particle):
        """–£–¥–∞–ª–µ–Ω–∏–µ —á–∞—Å—Ç–∏—Ü—ã"""
        if particle in self.particles:
            self.particles.remove(particle)
            particle.deleteLater()
            
    def set_status(self, status_text):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞"""
        self.status_label.setText(status_text)
        
        # –ê–Ω–∏–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        self.animate_label_change(self.status_label)
        
    def set_details(self, details_text):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
        self.details_label.setText(details_text)
        
    def set_progress(self, value):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        # –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        if hasattr(self, 'progress_animation'):
            self.progress_animation.stop()
            
        self.progress_animation = QPropertyAnimation(self.progress_bar, b"value")
        self.progress_animation.setDuration(300)
        self.progress_animation.setStartValue(self.progress_bar.value())
        self.progress_animation.setEndValue(value)
        self.progress_animation.setEasingCurve(QEasingCurve.OutCubic)
        self.progress_animation.start()
        
        # –ò–∑–º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        if value >= 100:
            self.processing_icon.setText("‚úÖ")
            self.processing_icon.setStyleSheet("font-size: 48px; color: #27ae60;")
            self.show_completion_animation()
        elif value >= 75:
            self.processing_icon.setText("‚ö°")
            self.processing_icon.setStyleSheet("font-size: 48px; color: #f39c12;")
        elif value >= 50:
            self.processing_icon.setText("üöÄ")
            self.processing_icon.setStyleSheet("font-size: 48px; color: #e67e22;")
            
    def animate_label_change(self, label):
        """–ê–Ω–∏–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ label"""
        # –≠—Ñ—Ñ–µ–∫—Ç –º–∏–≥–∞–Ω–∏—è
        original_color = label.styleSheet()
        
        # –ü–æ–¥—Å–≤–µ—Ç–∫–∞
        label.setStyleSheet(original_color + "color: #4a90e2;")
        
        # –í–æ–∑–≤—Ä–∞—Ç –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Ü–≤–µ—Ç—É —á–µ—Ä–µ–∑ 200–º—Å
        QTimer.singleShot(200, lambda: label.setStyleSheet(original_color))
        
    def show_completion_animation(self):
        """–ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        self.particle_timer.stop()
        
        for i in range(12):
            particle = QLabel("‚ú®", self)
            particle.setStyleSheet("color: #f1c40f; font-size: 20px;")
            particle.resize(25, 25)
            
            # –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –≤–æ–∫—Ä—É–≥ –∏–∫–æ–Ω–∫–∏
            icon_center = self.processing_icon.geometry().center()
            angle = (i * 30) * math.pi / 180
            radius = 60
            
            start_x = icon_center.x()
            start_y = icon_center.y()
            end_x = icon_center.x() + int(radius * math.cos(angle))
            end_y = icon_center.y() + int(radius * math.sin(angle))
            
            particle.move(start_x, start_y)
            particle.show()
            
            # –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
            animation = QPropertyAnimation(particle, b"pos")
            animation.setDuration(1000)
            animation.setStartValue(QPoint(start_x, start_y))
            animation.setEndValue(QPoint(end_x, end_y))
            animation.setEasingCurve(QEasingCurve.OutQuad)
            animation.start()
            
            # –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
            fade_animation = QPropertyAnimation(particle, b"windowOpacity")
            fade_animation.setDuration(1000)
            fade_animation.setStartValue(1.0)
            fade_animation.setEndValue(0.0)
            fade_animation.finished.connect(particle.deleteLater)
            fade_animation.start()
            
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        QTimer.singleShot(2000, self.accept)
        
    def show_cancel_button(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã"""
        self.cancel_button.setVisible(True)
        
        # –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
        self.cancel_button.setStyleSheet(self.cancel_button.styleSheet() + "background-color: transparent;")
        
        button_animation = QPropertyAnimation(self.cancel_button, b"geometry")
        button_animation.setDuration(300)
        
        original_geometry = self.cancel_button.geometry()
        start_geometry = QRect(
            original_geometry.x(), 
            original_geometry.y() + 20,
            original_geometry.width(), 
            0
        )
        
        button_animation.setStartValue(start_geometry)
        button_animation.setEndValue(original_geometry)
        button_animation.setEasingCurve(QEasingCurve.OutBounce)
        button_animation.finished.connect(lambda: self.cancel_button.setStyleSheet(
            self.cancel_button.styleSheet().replace("background-color: transparent;", "")
        ))
        button_animation.start()
        
    def cancel_processing(self):
        """–û—Ç–º–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        self.is_processing = False
        self.processing_icon.setText("‚ùå")
        self.processing_icon.setStyleSheet("font-size: 48px; color: #e74c3c;")
        self.status_label.setText("–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        self.particle_timer.stop()
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
        QTimer.singleShot(1000, self.reject)
        
    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞"""
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Ç–∞–π–º–µ—Ä—ã
        if hasattr(self, 'particle_timer'):
            self.particle_timer.stop()
            
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏—Ü—ã
        for particle in self.particles:
            particle.deleteLater()
            
        event.accept()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    app.setStyle("Fusion")
    
    # –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
    palette = QPalette()
    palette.setColor(QPalette.Window, QColor(30, 30, 30))
    palette.setColor(QPalette.WindowText, QColor(255, 255, 255))
    app.setPalette(palette)
    
    # –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
    dialog = ProcessingDialog(title="–û–±—Ä–∞–±–æ—Ç–∫–∞")
    dialog.show()
    
    def simulate_processing():
        import time
        stages = [
            (10, "–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...", "–ß—Ç–µ–Ω–∏–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞"),
            (25, "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...", "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤"),
            (40, "–ê–Ω–∞–ª–∏–∑ –∫–∞–¥—Ä–æ–≤...", "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"),
            (60, "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—É—Ä–æ–≤...", "–ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π"),
            (80, "–†–∞—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫...", "–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"),
            (95, "–§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è...", "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"),
            (100, "–ì–æ—Ç–æ–≤–æ!", "–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        ]
        
        for progress, status, details in stages:
            QTimer.singleShot(
                stages.index((progress, status, details)) * 1000,
                lambda p=progress, s=status, d=details: (
                    dialog.set_progress(p),
                    dialog.set_status(s),
                    dialog.set_details(d)
                )
            )
    
    QTimer.singleShot(1000, simulate_processing)
    
    QTimer.singleShot(2000, dialog.show_cancel_button)
    
    sys.exit(app.exec_())